#############################################################################
# Makefile for building: DwtoVicky
# Generated by qmake (2.01a) (Qt 4.7.0) on: Sun May 29 22:54:06 2011
# Project:  DwtoVicky.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN -DQT_NO_DYNAMIC_CAST
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -fno-exceptions -Wall -fno-rtti $(DEFINES)
INCPATH       = -I"..\..\..\..\Qt\2010.05\qt\include\QtCore" -I"..\..\..\..\Qt\2010.05\qt\include\QtGui" -I"..\..\..\..\Qt\2010.05\qt\include" -I"." -I"..\ParadoxParser" -I"..\boost_1_41_0" -I"..\..\..\..\Qt\2010.05\qt\include\ActiveQt" -I"release" -I"..\..\..\..\Qt\2010.05\qt\mkspecs\default"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -static-libgcc -Wl,-s -Wl,-subsystem,windows
LIBS        =        -L"c:\Qt\2010.05\qt\lib" -lmingw32 -lqtmain C:\Users\Rolf\Desktop\ParadoxParser\libParser.lib -lQtGui -lgdi32 -lcomdlg32 -loleaut32 -limm32 -lwinmm -lwinspool -lmsimg32 -lQtCore -lkernel32 -luser32 -lshell32 -luuid -lole32 -ladvapi32 -lws2_32 
QMAKE         = c:\Qt\2010.05\qt\bin\qmake.exe
IDC           = c:\Qt\2010.05\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = CleanerWindow.cpp \
		Logger.cc release\moc_CleanerWindow.cpp \
		release\moc_Logger.cpp
OBJECTS       = release/CleanerWindow.o \
		release/Logger.o \
		release/moc_CleanerWindow.o \
		release/moc_Logger.o
DIST          = 
QMAKE_TARGET  = DwtoVicky
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = DwtoVicky.exe
DESTDIR_TARGET = release\DwtoVicky.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) $(OBJECTS)  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -after  LIBS+=C:\Users\Rolf\Desktop\ParadoxParser\libParser.lib INCLUDEPATH+=C:\Users\Rolf\Desktop\ParadoxParser INCLUDEPATH+=C:\Users\Rolf\Desktop\boost_1_41_0 -o Makefile.Release DwtoVicky.pro

dist:
	$(ZIP) DwtoVicky.zip $(SOURCES) $(DIST) DwtoVicky.pro ..\..\..\..\Qt\2010.05\qt\mkspecs\qconfig.pri ..\..\..\..\Qt\2010.05\qt\mkspecs\modules\qt_webkit_version.pri ..\..\..\..\Qt\2010.05\qt\mkspecs\features\qt_functions.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\qt_config.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\exclusive_builds.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\default_pre.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\win32\default_pre.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\release.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\debug_and_release.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\default_post.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\win32\default_post.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\build_pass.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\win32\exceptions_off.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\static.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\warn_on.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\qt.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\win32\thread.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\moc.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\win32\windows.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\win32\stl_off.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\win32\rtti_off.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\resources.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\uic.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\yacc.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\lex.prf ..\..\..\..\Qt\2010.05\qt\mkspecs\features\include_source_dir.prf c:\Qt\2010.05\qt\lib\qtmain.prl c:\Qt\2010.05\qt\lib\QtGui.prl c:\Qt\2010.05\qt\lib\QtCore.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\CleanerWindow.o release\Logger.o release\moc_CleanerWindow.o release\moc_Logger.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_CleanerWindow.cpp release/moc_Logger.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release\moc_CleanerWindow.cpp release\moc_Logger.cpp
release/moc_CleanerWindow.cpp: CleanerWindow.hh
	C:\Qt\2010.05\qt\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 CleanerWindow.hh -o release\moc_CleanerWindow.cpp

release/moc_Logger.cpp: Logger.hh
	C:\Qt\2010.05\qt\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 Logger.hh -o release\moc_Logger.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 



####### Compile

release/CleanerWindow.o: CleanerWindow.cpp CleanerWindow.hh \
		Logger.hh \
		StructUtils.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\CleanerWindow.o CleanerWindow.cpp

release/Logger.o: Logger.cc Logger.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Logger.o Logger.cc

release/moc_CleanerWindow.o: release/moc_CleanerWindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_CleanerWindow.o release\moc_CleanerWindow.cpp

release/moc_Logger.o: release/moc_Logger.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_Logger.o release\moc_Logger.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

